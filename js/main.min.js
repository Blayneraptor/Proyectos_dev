// Función para el preloader con tiempo fijado de 1.5 segundos
window.addEventListener('load', function() {
    setTimeout(function() {
        // Ocultar el preloader
        document.querySelector('.preloader').classList.add('hide');
        // Marcar el body como cargado
        document.body.classList.add('loaded');
        // Forzar el scroll al inicio para evitar problemas
        window.scrollTo(0, 0);
    }, 1500); // 1.5 segundos exactamente
});

$(document).ready((function () {
    // Inicializar sliders y scroll suave
    $(".project__slider").slick({ autoplay: !0, dots: !0 });
    new SmoothScroll('a[href*="#"]', { header: "[data-scroll-header]", speed: 1e3, speedAsDuration: !0 });
    
    // Variables para el header
    const header = document.querySelector(".header");
    const headerLogo = document.querySelector(".header__logo-link");
    const headerLinks = document.querySelectorAll(".header__link");
    const headerLines = document.querySelectorAll(".header__line");
    const skillsItems = document.querySelectorAll(".skills__item");
    const skillsTitle = document.querySelector(".title__skills");
    const educationWrapper = document.querySelector(".education__wrapper");
    const mainSections = document.querySelectorAll("main>div");
    const hamburger = document.querySelector(".header__hamburger");
    const navigation = document.querySelector(".header__navigation");
    
    // Función para manejar el header (ÚNICA Y SIMPLE)
    function handleHeaderScroll() {
        const scrollTop = window.pageYOffset;
        const threshold = 80;
        
        if (scrollTop > threshold) {
            // SOLO activar header - una clase, un estado
            header.classList.add("header_active");
            headerLogo.classList.add("header__logo-link_active");
            
            // Aplicar estado activo a TODOS los enlaces de manera uniforme
            headerLinks.forEach(link => {
                link.classList.add("header__link_active");
            });
            
            // Cambiar color de líneas del hamburger
            headerLines.forEach(line => {
                line.style.backgroundColor = "#2c3e50";
            });
        } else {
            // SOLO desactivar header - remover todas las clases activas
            header.classList.remove("header_active");
            headerLogo.classList.remove("header__logo-link_active");
            
            // Remover estado activo de TODOS los enlaces
            headerLinks.forEach(link => {
                link.classList.remove("header__link_active");
            });
            
            // Restaurar color de líneas del hamburger
            headerLines.forEach(line => {
                line.style.backgroundColor = "#fff";
            });
        }
        
        // Manejar enlace activo de la sección actual (SEPARADO del estado scroll)
        updateActiveLinks();
    }
    
    // Función SEPARADA para manejar qué enlace está seleccionado
    function updateActiveLinks() {
        const scrollTop = window.pageYOffset;
        const headerHeight = header.getBoundingClientRect().height;
        
        // Primero remover TODAS las clases de selección
        headerLinks.forEach(link => {
            link.classList.remove("header__link-select_active");
        });
        
        // Luego añadir solo al enlace de la sección actual
        mainSections.forEach(section => {
            const sectionTop = section.getBoundingClientRect().top + window.pageYOffset;
            const sectionHeight = section.offsetHeight;
            const sectionId = section.id;
            
            if (scrollTop >= sectionTop - headerHeight - 50 && scrollTop < sectionTop + sectionHeight - headerHeight) {
                headerLinks.forEach(link => {
                    const linkHash = link.hash ? link.hash.replace(/#/, "") : "";
                    if (linkHash === sectionId) {
                        link.classList.add("header__link-select_active");
                    }
                });
            }
        });
    }
    
    // Función para manejar animaciones de skills
    function handleSkillsAnimation() {
        if (skillsTitle) {
            const skillsOffset = skillsTitle.getBoundingClientRect().top + window.pageYOffset;
            const windowHeight = window.innerHeight;
            
            if (window.pageYOffset > skillsOffset - windowHeight + skillsTitle.offsetHeight / 2) {
                skillsItems.forEach(item => {
                    item.classList.add("skills__item_show");
                });
            }
        }
    }
    
    // Event listeners
    window.addEventListener("scroll", () => {
        handleHeaderScroll();
        handleSkillsAnimation();
    });
    
    window.addEventListener("load", () => {
        handleHeaderScroll();
        handleSkillsAnimation();
    });
    
    // Mejorar funcionalidad del navbar móvil
    if (hamburger && navigation) {
        // Función para gestionar el estado del menú
        function toggleMenu(open) {
            if (open === undefined) {
                // Toggle mode
                const isOpen = hamburger.classList.contains('active');
                toggleMenu(!isOpen);
                return;
            }
            
            if (open) {
                hamburger.classList.add('active');
                navigation.classList.add('header__navigation_active');
                document.body.style.overflow = 'hidden'; // Bloquear scroll cuando menú abierto
                console.log('Abriendo menú móvil'); // Debug
            } else {
                hamburger.classList.remove('active');
                navigation.classList.remove('header__navigation_active');
                document.body.style.overflow = ''; // Restaurar scroll
                console.log('Cerrando menú móvil'); // Debug
            }
        }
        
        // Toggle del menú al hacer click en hamburger
        hamburger.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            toggleMenu(); // Toggle mode
            console.log('Click en hamburguesa, estado:', hamburger.classList.contains('active')); // Debug
        });
        
        // Cerrar menú al hacer click en un enlace
        navigation.querySelectorAll('.header__link').forEach(link => {
            link.addEventListener('click', function() {
                toggleMenu(false);
            });
        });
        
        // Cerrar menú al hacer click fuera
        document.addEventListener('click', function(e) {
            if (!hamburger.contains(e.target) && !navigation.contains(e.target) && hamburger.classList.contains('active')) {
                toggleMenu(false);
            }
        });
        
        // Cerrar menú al presionar ESC
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && hamburger.classList.contains('active')) {
                toggleMenu(false);
            }
        });
    }

    // Animaciones de subtítulos del logo
    function animateLogoSubtitles() {
        document.querySelectorAll(".logo__subtitle").forEach((subtitle, index) => {
            setTimeout(() => {
                subtitle.classList.add("logo__subtitle_show");
                setTimeout(() => {
                    subtitle.classList.remove("logo__subtitle_show");
                }, 1800);
            }, 2700 * ++index);
        });
    }
    
    animateLogoSubtitles();
    setInterval(animateLogoSubtitles, 8e3);
    
    // Contadores (si existen)
    let taskCounter = document.querySelector(".counter__tasks");
    let rankCounter = document.querySelector(".counter__rank");
    
    function animateCounter(start, element, max, speed) {
        let current = start;
        let timer = setInterval(() => {
            element.value = current;
            if (current === max) clearInterval(timer);
            current++;
        }, speed);
    }

    // Funciones adicionales para el sitio web
    function copyToClipboard(text) { 
        navigator.clipboard.writeText(text).then(() => { 
            alert('¡Copiado al portapapeles!'); 
        }).catch(err => { 
            console.error('Error al copiar al portapapeles:', err); 
        }); 
    }
    
    const copyPhone = document.getElementById('copyPhone');
    const copyEmail = document.getElementById('copyEmail');
    
    if (copyPhone) {
        copyPhone.addEventListener('click', function (event) { 
            event.preventDefault(); 
            const phoneNumber = '+34645448914'; 
            copyToClipboard(phoneNumber); 
        });
    }
    
    if (copyEmail) {
        copyEmail.addEventListener('click', function (event) { 
            event.preventDefault(); 
            const email = 'cousoworks@gmail.com'; 
            copyToClipboard(email); 
        });
    }
    
    const yearElement = document.getElementById('year'); 
    if (yearElement) { 
        const currentYear = new Date().getFullYear(); 
        yearElement.textContent = currentYear; 
    }

    // Modal de perfil
    document.addEventListener('DOMContentLoaded', function () { 
        const modal = document.createElement('div'); 
        modal.className = 'profile-modal'; 
        modal.innerHTML = '<div class="profile-modal-content"><span class="profile-modal-close">&times;</span><img src="assets/img/logo/author.jpg" alt="Profile Image" class="profile-modal-image"></div>'; 
        document.body.appendChild(modal); 
        
        const logoAuthor = document.querySelector('.logo__author'); 
        if (logoAuthor) { 
            logoAuthor.addEventListener('click', function () { 
                modal.classList.add('show'); 
                document.body.style.overflow = 'hidden'; 
            }); 
        } 
        
        const closeBtn = modal.querySelector('.profile-modal-close'); 
        closeBtn.addEventListener('click', function () { 
            modal.classList.remove('show'); 
            document.body.style.overflow = ''; 
        }); 
        
        modal.addEventListener('click', function (e) { 
            if (e.target === modal) { 
                modal.classList.remove('show'); 
                document.body.style.overflow = ''; 
            } 
        }); 
        
        document.addEventListener('keydown', function (e) { 
            if (e.key === 'Escape' && modal.classList.contains('show')) { 
                modal.classList.remove('show'); 
                document.body.style.overflow = ''; 
            } 
        }); 
    });
}));